{
  "openapi": "3.0.1",
  "info": {
    "title": "Govstack Scheduler API",
    "description": "Interfaces to services rendered by Scheduler building block",
    "termsOfService": "TBD",
    "contact": {
      "email": "psramkumar2@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "externalDocs": {
    "description": "Find out more about scheduler",
    "url": "https://www.govstack.global/"
  },
  "servers": [
    {
      "url": "http://ss2.egovstack.net/r1/eGovStack/COM/11222456/SchedulerBB/creg/",
      "description": "Scheduler BB Security server"
    }
  ],
  "tags": [
    {
      "name": "event",
      "description": "event  API"
    },
    {
      "name": "find",
      "description": "find  API"
    },
    {
      "name": "alert",
      "description": "alert  API"
    },
    {
      "name": "resource",
      "description": "resource  API"
    },
    {
      "name": "subscribers",
      "description": "subscriber  API"
    },
    {
      "name": "status",
      "description": "status  API"
    },
    {
      "name": "get_log_report",
      "description": "log report"
    }
  ],
  "paths": {
    "/event/new": {
      "post": {
        "tags": [
          "event"
        ],
        "summary": "create a new event, in event List with given details, returns new event id",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "details",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/event_details"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "ID of created event",
                  "example": "event_name:doctorconsultation,event_id:4524458935"
                }
              }
            }
          },
          "403": {
            "description": "requestor doesnot have permission to create a new event"
          },
          "405": {
            "description": "Invalid input"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/event/new_appointment": {
      "post": {
        "tags": [
          "event"
        ],
        "summary": "Adds resource/subscriber to event in event List",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "participant_type",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "subscriber/resource"
            }
          },
          {
            "name": "participant_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "403": {
            "description": "requestor does not have permission to allocate participant"
          },
          "405": {
            "description": "Invalid input work hours"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/event/modifications": {
      "put": {
        "tags": [
          "event"
        ],
        "summary": "changes specified fields of given event id in event list to specified values",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event_filter",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/event_filter"
            }
          },
          {
            "name": "details",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/event_details"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success, event updated"
          },
          "400": {
            "description": "Invalid event_id supplied"
          },
          "403": {
            "description": "requestor doesnot have permission to update"
          },
          "404": {
            "description": "event_id not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/event": {
      "delete": {
        "tags": [
          "event"
        ],
        "summary": "delete a preconfigured event",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success, event cancelled"
          },
          "400": {
            "description": "Invalid event_id supplied"
          },
          "403": {
            "description": "requestor doesnot have permission to cancel"
          },
          "404": {
            "description": "event_id not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/event/appointment": {
      "delete": {
        "tags": [
          "event"
        ],
        "summary": "delete a preconfigured event",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "participant_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "participant_type",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "resource or subscriber"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success, event enrolment cancelled"
          },
          "400": {
            "description": "Invalid event_id supplied"
          },
          "403": {
            "description": "requestor doesnot have permission to cancel enrolement"
          },
          "404": {
            "description": "event_id or participant id not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/event/list_details": {
      "get": {
        "tags": [
          "event"
        ],
        "summary": "get list of events filetered by given fields and return all details",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event_filter",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/event_filter"
            }
          },
          {
            "name": "Details",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/event_details_required"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success,event list",
            "content": {
              "json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/event_list"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "requestor doesnot have permission to access the information"
          },
          "404": {
            "description": "filter not found"
          }
        }
      }
    },
    "/entity/new": {
      "post": {
        "tags": [
          "entity"
        ],
        "summary": "create a new entity, in entity List with given details, returns new entity id",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "details",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/entity_details"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "ID of created entity",
                  "example": "entity_name:xyz hospital,entity_id:4524458935"
                }
              }
            }
          },
          "403": {
            "description": "requestor doesnot have permission to create a new entity"
          },
          "405": {
            "description": "Invalid input"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/entity/modifications": {
      "put": {
        "tags": [
          "entity"
        ],
        "summary": "changes specified fields of given entity id in entity list to specified values",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entity_filter",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/entity_filter"
            }
          },
          {
            "name": "details",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/entity_details"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success, entity updated"
          },
          "400": {
            "description": "Invalid entity_id supplied"
          },
          "403": {
            "description": "requestor doesnot have permission to update"
          },
          "404": {
            "description": "entity_id not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/entity": {
      "delete": {
        "tags": [
          "entity"
        ],
        "summary": "delete a preconfigured entity",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entity_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success, entity cancelled"
          },
          "400": {
            "description": "Invalid entity_id supplied"
          },
          "403": {
            "description": "requestor doesnot have permission to cancel"
          },
          "404": {
            "description": "entity_id not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/entity/list_details": {
      "get": {
        "tags": [
          "entity"
        ],
        "summary": "get list of entitys filetered by given fields and return all details",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entity_filter",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/entity_filter"
            }
          },
          {
            "name": "Details",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/entity_details_required"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success,entity list",
            "content": {
              "json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/entity_list"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "requestor doesnot have permission to access the information"
          },
          "404": {
            "description": "filter not found"
          }
        }
      }
    },
    "/resource/new": {
      "post": {
        "tags": [
          "resource"
        ],
        "summary": "create a new resource, in resource List with given details, returns new resource id",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "details",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/resource_details"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "ID of created resource",
                  "example": "resource_name:abcd,resource_id:4524458935"
                }
              }
            }
          },
          "403": {
            "description": "requestor doesnot have permission to create a new resource"
          },
          "405": {
            "description": "Invalid input"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/resource/modifications": {
      "put": {
        "tags": [
          "resource"
        ],
        "summary": "changes specified fields of given resource id in resource list to specified values",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resource_filter",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/resource_filter"
            }
          },
          {
            "name": "details",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/resource_details"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success, resource updated"
          },
          "400": {
            "description": "Invalid resource_id supplied"
          },
          "403": {
            "description": "requestor doesnot have permission to update"
          },
          "404": {
            "description": "resource_id not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/resource": {
      "delete": {
        "tags": [
          "resource"
        ],
        "summary": "delete a preconfigured resource",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resource_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success, resource cancelled"
          },
          "400": {
            "description": "Invalid resource_id supplied"
          },
          "403": {
            "description": "requestor doesnot have permission to cancel"
          },
          "404": {
            "description": "resource_id not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/resource/list_details": {
      "get": {
        "tags": [
          "resource"
        ],
        "summary": "get list of resources filetered by given fields and return all details",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resource_filter",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/resource_filter"
            }
          },
          {
            "name": "Details",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/resource_details_required"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success,resource  list",
            "content": {
              "json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/resource_list"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "requestor doesnot have permission to access the information"
          },
          "404": {
            "description": "filter not found"
          }
        }
      }
    },
    "/resource/availability": {
      "get": {
        "tags": [
          "resource"
        ],
        "summary": "get details of resources that are free in a given date range and entity",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "resource_ids",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "Entity_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "datetime_range",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/datetime_range"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success,resource  list",
            "content": {
              "json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/free_resource_list"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "requestor doesnot have permission to access the information"
          },
          "404": {
            "description": "filter not found"
          }
        }
      }
    },
    "/subscriber/new": {
      "post": {
        "tags": [
          "subscriber"
        ],
        "summary": "create a new subscriber, in subscriber List with given details, returns new subscriber id",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "details",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/subscriber_details"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "ID of created subscriber",
                  "example": "subscriber_name:abcd,subscriber_id:4524458935"
                }
              }
            }
          },
          "403": {
            "description": "requestor doesnot have permission to create a new subscriber"
          },
          "405": {
            "description": "Invalid input"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/subscriber/modifications": {
      "put": {
        "tags": [
          "subscriber"
        ],
        "summary": "changes specified fields of given subscriber id in subscriber list to specified values",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber_filter",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/subscriber_filter"
            }
          },
          {
            "name": "details",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/subscriber_details"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success, subscriber updated"
          },
          "400": {
            "description": "Invalid subscriber_id supplied"
          },
          "403": {
            "description": "requestor doesnot have permission to update"
          },
          "404": {
            "description": "subscriber_id not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/subscriber": {
      "delete": {
        "tags": [
          "subscriber"
        ],
        "summary": "delete a preconfigured subscriber",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success, subscriber cancelled"
          },
          "400": {
            "description": "Invalid subscriber_id supplied"
          },
          "403": {
            "description": "requestor doesnot have permission to cancel"
          },
          "404": {
            "description": "subscriber_id not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/subscriber/list_details": {
      "get": {
        "tags": [
          "subscriber"
        ],
        "summary": "get list of subscribers filetered by given fields and return all details",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriber_filter",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/subscriber_filter"
            }
          },
          {
            "name": "Details",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/subscriber_details_required"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success,subscriber  list",
            "content": {
              "json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/subscriber_list"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "requestor doesnot have permission to access the information"
          },
          "404": {
            "description": "filter not found"
          }
        }
      }
    },
    "/message/new": {
      "post": {
        "tags": [
          "message"
        ],
        "summary": "create a new message, in message List with given details, returns new message id",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "details",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/message_list"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "ID of created message",
                  "example": "message_category:appointment_reminder,message_id:4524458935"
                }
              }
            }
          },
          "403": {
            "description": "requestor doesnot have permission to create a new message"
          },
          "405": {
            "description": "Invalid input"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/message/modifications": {
      "put": {
        "tags": [
          "message"
        ],
        "summary": "changes specified fields of given message id in message list to specified values",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "message_filter",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/message_filter"
            }
          },
          {
            "name": "details",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/message_details"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success, message updated"
          },
          "400": {
            "description": "Invalid message_id supplied"
          },
          "403": {
            "description": "requestor doesnot have permission to update"
          },
          "404": {
            "description": "message_id not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/message": {
      "delete": {
        "tags": [
          "message"
        ],
        "summary": "delete a preconfigured message",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "message_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success, message cancelled"
          },
          "400": {
            "description": "Invalid message_id supplied"
          },
          "403": {
            "description": "requestor doesnot have permission to cancel"
          },
          "404": {
            "description": "message_id not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/message/list_details": {
      "get": {
        "tags": [
          "message"
        ],
        "summary": "get list of messages filetered by given fields and return all details",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "message_filter",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/message_filter"
            }
          },
          {
            "name": "Details",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/messange_details_required"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success,entity list",
            "content": {
              "json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/message_list"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "requestor doesnot have permission to access the information"
          },
          "404": {
            "description": "filter not found"
          }
        }
      }
    },
    "/affiliation/new": {
      "post": {
        "tags": [
          "affiliation"
        ],
        "summary": "create a new affiliation, in affiliation List with given details, returns new affiliation id",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "details",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/affiliation_details"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "ID of created affiliation",
                  "example": "affiliation_id:4524458935"
                }
              }
            }
          },
          "403": {
            "description": "requestor doesnot have permission to create a new affiliation"
          },
          "405": {
            "description": "Invalid input"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/affiliation/modifications": {
      "put": {
        "tags": [
          "affiliation"
        ],
        "summary": "changes specified fields of given affiliation id in affiliation list to specified values",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "affiliation_filter",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/affiliation_filter"
            }
          },
          {
            "name": "details",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/affiliation_details"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success, affiliation updated"
          },
          "400": {
            "description": "Invalid affiliation_id supplied"
          },
          "403": {
            "description": "requestor doesnot have permission to update"
          },
          "404": {
            "description": "affiliation_id not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/affiliation": {
      "delete": {
        "tags": [
          "affiliation"
        ],
        "summary": "delete a preconfigured affiliation",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "affiliation_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success, affiliation cancelled"
          },
          "400": {
            "description": "Invalid affiliation_id supplied"
          },
          "403": {
            "description": "requestor doesnot have permission to cancel"
          },
          "404": {
            "description": "affiliation_id not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/affiliation/list_details": {
      "get": {
        "tags": [
          "affiliation"
        ],
        "summary": "get list of affiliations filetered by given fields and return all details",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "affiliation_filter",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/affiliation_filter"
            }
          },
          {
            "name": "Details",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/affiliation_details_required"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success,entity list",
            "content": {
              "json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/affiliation_list"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "requestor doesnot have permission to access the information"
          },
          "404": {
            "description": "filter not found"
          }
        }
      }
    },
    "/alert_schedule/new": {
      "post": {
        "tags": [
          "alert_schedule"
        ],
        "summary": "create a new alert_schedule, in alert_schedule List with given details, returns new alert_schedule id",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "details",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/alert_schedule_details"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "ID of created alert_schedule",
                  "example": "alert_schedule_id:4524458935"
                }
              }
            }
          },
          "403": {
            "description": "requestor doesnot have permission to create a new alert_schedule"
          },
          "405": {
            "description": "Invalid input"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/alert_schedule/modifications": {
      "put": {
        "tags": [
          "alert_schedule"
        ],
        "summary": "changes specified fields of given alert_schedule id in alert_schedule list to specified values",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "alert_schedule_filter",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/alert_schedule_filter"
            }
          },
          {
            "name": "details",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/alert_schedule_details"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success, alert_schedule updated"
          },
          "400": {
            "description": "Invalid alert_schedule_id supplied"
          },
          "403": {
            "description": "requestor doesnot have permission to update"
          },
          "404": {
            "description": "alert_schedule_id not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/alert_schedule": {
      "delete": {
        "tags": [
          "alert_schedule"
        ],
        "summary": "delete a preconfigured alert_schedule",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "alert_schedule_id",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event_id",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success, alert_schedule cancelled"
          },
          "400": {
            "description": "Invalid alert_schedule_id supplied"
          },
          "403": {
            "description": "requestor doesnot have permission to cancel"
          },
          "404": {
            "description": "alert_schedule_id not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/alert_schedule/list_details": {
      "get": {
        "tags": [
          "alert_schedule"
        ],
        "summary": "get list of alert_schedules filetered by given fields and return all details",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "alert_schedule_filter",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/alert_schedule_filter"
            }
          },
          {
            "name": "Details",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/alert_schedule_details_required"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success,entity list",
            "content": {
              "json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/alert_schedule_list"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "requestor doesnot have permission to access the information"
          },
          "404": {
            "description": "filter not found"
          }
        }
      }
    },
    "/log/new": {
      "put": {
        "tags": [
          "log"
        ],
        "summary": "update attendence of specific participants of event(s)",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "details",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/log_list"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success, status",
            "content": {
              "json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "requestor doesnot have permission to update"
          },
          "404": {
            "description": "sourceid/tokenid/status not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/log/list_details": {
      "get": {
        "tags": [
          "log"
        ],
        "summary": "Publish chronological transaction report as chosen by filter",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "log_filter",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/log_filter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Publish specific types of reports from logs",
            "content": {
              "json": {
                "schema": {
                  "$ref": "#/components/schemas/log_details"
                }
              }
            }
          },
          "400": {
            "description": "Invalid filter type supplied"
          },
          "403": {
            "description": "requestor doesnot have permission to access the information"
          },
          "404": {
            "description": "report not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "entity_list": {
        "type": "object",
        "properties": {
          "entity_id": {
            "type": "string"
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/entity_details"
            }
          }
        }
      },
      "entity_details": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "website": {
            "type": "string",
            "format": "url"
          },
          "address": {
            "$ref": "#/components/schemas/address"
          }
        }
      },
      "entity_filter": {
        "type": "object",
        "properties": {
          "entity_id": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "website": {
            "type": "string",
            "format": "url"
          },
          "address": {
            "$ref": "#/components/schemas/address"
          }
        }
      },
      "entity_details_required": {
        "type": "object",
        "properties": {
          "entity_id": {
            "type": "boolean"
          },
          "category": {
            "type": "boolean"
          },
          "name": {
            "type": "boolean"
          },
          "phone": {
            "type": "boolean"
          },
          "email": {
            "type": "boolean"
          },
          "website": {
            "type": "boolean"
          },
          "address": {
            "type": "boolean"
          }
        }
      },
      "resource_list": {
        "type": "object",
        "properties": {
          "resource_id": {
            "type": "string"
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/resource_details"
            }
          }
        }
      },
      "resource_details": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "category": {
            "type": "string",
            "example": "doctor/nurse/admin/application/etc"
          },
          "phone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "alert_url": {
            "type": "string",
            "format": "url"
          },
          "alert_preference": {
            "type": "string",
            "example": " phone/mail/url"
          },
          "status_poll_url": {
            "type": "string",
            "format": "url"
          }
        }
      },
      "resource_filter": {
        "type": "object",
        "properties": {
          "resource_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "alert_url": {
            "type": "string",
            "format": "url"
          },
          "alert_preference": {
            "type": "string",
            "example": " phone/mail/url"
          },
          "status_poll_url": {
            "type": "string",
            "format": "url"
          }
        }
      },
      "resource_details_required": {
        "type": "object",
        "properties": {
          "resource_id": {
            "type": "boolean"
          },
          "name": {
            "type": "boolean"
          },
          "category": {
            "type": "boolean"
          },
          "phone": {
            "type": "boolean"
          },
          "email": {
            "type": "boolean"
          },
          "alert_url": {
            "type": "boolean"
          },
          "alert_preference": {
            "type": "boolean"
          },
          "status_poll_url": {
            "type": "boolean"
          }
        }
      },
      "subscriber_list": {
        "type": "object",
        "properties": {
          "subscriber_id": {
            "type": "string"
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/subscriber_details"
            }
          }
        }
      },
      "subscriber_details": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "alert_url": {
            "type": "string",
            "format": "url"
          },
          "alert_preference": {
            "type": "string",
            "example": " phone/mail/url"
          },
          "status_poll_url": {
            "type": "string",
            "format": "url"
          }
        }
      },
      "subscriber_filter": {
        "type": "object",
        "properties": {
          "subscriber_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "alert_url": {
            "type": "string",
            "format": "url"
          },
          "alert_preference": {
            "type": "string",
            "example": " phone/mail/url"
          },
          "status_poll_url": {
            "type": "string",
            "format": "url"
          }
        }
      },
      "subscriber_details_required": {
        "type": "object",
        "properties": {
          "subscriber_id": {
            "type": "boolean"
          },
          "name": {
            "type": "boolean"
          },
          "phone": {
            "type": "boolean"
          },
          "email": {
            "type": "boolean"
          },
          "alert_url": {
            "type": "boolean"
          },
          "alert_preference": {
            "type": "boolean"
          },
          "status_poll_url": {
            "type": "boolean"
          }
        }
      },
      "datetime_range": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "date-time",
            "example": "2018-02-15T00:00:00Z"
          },
          "to": {
            "type": "string",
            "format": "date-time",
            "example": "2018-02-15T00:00:00Z"
          }
        }
      },
      "event_list": {
        "type": "object",
        "properties": {
          "event_id": {
            "type": "string"
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/event_details"
            }
          }
        }
      },
      "event_details": {
        "type": "object",
        "properties": {
          "event_name": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "host_entity_id": {
            "type": "integer"
          },
          "period": {
            "$ref": "#/components/schemas/datetime_range"
          },
          "address": {
            "$ref": "#/components/schemas/address"
          },
          "deadline": {
            "type": "boolean"
          },
          "subscriber_limit": {
            "type": "integer"
          },
          "terms": {
            "type": "boolean"
          },
          "status": {
            "type": "string"
          },
          "subscriber_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "resource_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        }
      },
      "event_filter": {
        "type": "object",
        "properties": {
          "event_id": {
            "type": "integer"
          },
          "event_name": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "host_entity_id": {
            "type": "integer"
          },
          "address": {
            "$ref": "#/components/schemas/address"
          },
          "subscriber_limit": {
            "type": "integer"
          },
          "terms": {
            "type": "boolean"
          },
          "datetime_range": {
            "$ref": "#/components/schemas/datetime_range"
          },
          "participant_type": {
            "type": "string",
            "example": "resource/subscriber/both"
          },
          "participant_id": {
            "type": "integer"
          }
        }
      },
      "event_details_required": {
        "type": "object",
        "properties": {
          "event_id": {
            "type": "boolean"
          },
          "event_name": {
            "type": "boolean"
          },
          "category": {
            "type": "boolean"
          },
          "host_entity_id": {
            "type": "boolean"
          },
          "period": {
            "type": "boolean"
          },
          "address": {
            "type": "boolean"
          },
          "deadline": {
            "type": "boolean"
          },
          "subscriber_limit": {
            "type": "boolean"
          },
          "terms": {
            "type": "boolean"
          },
          "status": {
            "type": "boolean"
          }
        }
      },
      "affiliation_list": {
        "type": "object",
        "properties": {
          "affiliation_id": {
            "type": "string"
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/affiliation_details"
            }
          }
        }
      },
      "affiliation_details": {
        "type": "object",
        "properties": {
          "resource_id": {
            "type": "integer"
          },
          "entity_id": {
            "type": "integer"
          },
          "resource_category": {
            "type": "integer"
          },
          "day_of_week": {
            "type": "string"
          },
          "start_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "end_datetime": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "affiliation_filter": {
        "type": "object",
        "properties": {
          "affiliation_id": {
            "type": "string"
          },
          "resource_id": {
            "type": "integer"
          },
          "entity_id": {
            "type": "integer"
          },
          "category": {
            "type": "integer"
          },
          "datetime_range": {
            "$ref": "#/components/schemas/datetime_range"
          }
        }
      },
      "affiliation_details_required": {
        "type": "object",
        "properties": {
          "affiliation_id": {
            "type": "boolean"
          },
          "resource_id": {
            "type": "boolean"
          },
          "entity_id": {
            "type": "boolean"
          },
          "category": {
            "type": "boolean",
            "example": false
          },
          "work_days_hours": {
            "type": "boolean"
          }
        }
      },
      "alert_schedule_list": {
        "type": "object",
        "properties": {
          "alert_schedule_id": {
            "type": "string"
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/alert_schedule_details"
            }
          }
        }
      },
      "alert_schedule_details": {
        "type": "object",
        "properties": {
          "event_id": {
            "type": "integer"
          },
          "target_category": {
            "type": "string",
            "example": "resource/subscriber/all"
          },
          "message_id": {
            "type": "integer"
          },
          "alert_datetime": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "alert_schedule_filter": {
        "type": "object",
        "properties": {
          "alert_schedule_id": {
            "type": "string"
          },
          "entity_id": {
            "type": "integer"
          },
          "target_category": {
            "type": "string",
            "example": "resource/subscriber"
          },
          "message_id": {
            "type": "integer"
          },
          "datetime_range": {
            "$ref": "#/components/schemas/datetime_range"
          }
        }
      },
      "alert_schedule_details_required": {
        "type": "object",
        "properties": {
          "alert_schedule_id": {
            "type": "boolean"
          },
          "entity_id": {
            "type": "boolean"
          },
          "message_id": {
            "type": "boolean"
          },
          "alert_datetime": {
            "type": "boolean"
          }
        }
      },
      "message_list": {
        "type": "object",
        "properties": {
          "message_id": {
            "type": "string"
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/message_details"
            }
          }
        }
      },
      "message_details": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "message_filter": {
        "type": "object",
        "properties": {
          "message_id": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "messange_details_required": {
        "type": "object",
        "properties": {
          "message_id": {
            "type": "boolean"
          },
          "category": {
            "type": "boolean"
          },
          "message": {
            "type": "boolean"
          }
        }
      },
      "log_list": {
        "type": "object",
        "properties": {
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/log_details"
            }
          }
        }
      },
      "log_details": {
        "type": "object",
        "properties": {
          "log_id": {
            "type": "string"
          },
          "logger_category": {
            "type": "string",
            "example": "resource/subscriber/organizer/system/etc"
          },
          "logger_id": {
            "type": "integer"
          },
          "entity_id": {
            "type": "integer"
          },
          "log_category": {
            "type": "string",
            "example": "attendance/message_status/etc"
          },
          "datetime": {
            "type": "string",
            "format": "date-time"
          },
          "log_data": {
            "type": "string"
          }
        }
      },
      "log_filter": {
        "type": "object",
        "properties": {
          "entity_id": {
            "type": "integer"
          },
          "category": {
            "type": "string"
          },
          "datetime_range": {
            "$ref": "#/components/schemas/datetime_range"
          }
        }
      },
      "address": {
        "type": "object",
        "properties": {
          "building_name": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "locality": {
            "type": "string"
          },
          "town": {
            "type": "string"
          },
          "district": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "lat_long": {
            "type": "string"
          },
          "pincode": {
            "type": "string"
          }
        }
      },
      "free_resource_list": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/free_resource_details"
        }
      },
      "free_resource_details": {
        "type": "object",
        "properties": {
          "resource_id": {
            "type": "integer"
          },
          "resource_name": {
            "type": "string"
          },
          "free_slots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/datetime_range"
            }
          }
        }
      }
    }
  }
}