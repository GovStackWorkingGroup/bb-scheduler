{
  "openapi": "3.0.1",
  "info": {
    "title": "Govstack Scheduler API",
    "description": "Interfaces to services rendered by Scheduler building block",
    "termsOfService": "TBD",
    "contact": {
      "email": "psramkumar2@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "externalDocs": {
    "description": "Find out more about scheduler",
    "url": "https://www.govstack.global/"
  },
  "servers": [
    {
      "url": "http://ss2.egovstack.net/r1/eGovStack/COM/11222456/SchedulerBB/creg/",
      "description": "Scheduler BB Security server"
    }
  ],
  "tags": [
    {
      "name": "event",
      "description": "event management API"
    },
    {
      "name": "entity",
      "description": "entity management API"
    },
    {
      "name": "alert_schedule",
      "description": "alert_schedule management  API"
    },
    {
      "name": "resource",
      "description": "resource  management API"
    },
    {
      "name": "subscribers",
      "description": "subscriber  management API"
    },
    {
      "name": "message",
      "description": "message management API"
    },
    {
      "name": "log",
      "description": "log management API"
    },
    {
      "name": "affiliation",
      "description": "affiliation management API"
    }
  ],
  "paths": {
    "/event/new": {
      "post": {
        "tags": [
          "event"
        ],
        "summary": "create a new event, in event_list with given event_details, returns new event id or failure error code",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "healthngoadmin1"
            }
          },
          {
            "name": "details",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/event_details"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "ID of created event",
                  "example": "event_name:doctorconsultation,event_id:4524458935"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "No permission"
          },
          "404": {
            "description": "one or more specified inputs not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/event/new_appointment": {
      "post": {
        "tags": [
          "event"
        ],
        "summary": "Adds a registered resource or subscriber to a specific registered event in event_list and returns new appointment id with success or error code",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "healthngoadmin1"
            }
          },
          {
            "name": "event_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "1"
            }
          },
          {
            "name": "participant_type",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "subscriber"
            }
          },
          {
            "name": "participant_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "12345"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "No permission"
          },
          "404": {
            "description": "one or more specified inputs not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/event/modifications": {
      "put": {
        "tags": [
          "event"
        ],
        "summary": "changes values of specific details (as given by event_details) of given event (selected by event_filter)in event_list and returns success or error code",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "healthngoadmin1"
            }
          },
          {
            "name": "event_filter",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/event_filter"
            }
          },
          {
            "name": "details",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/event_details"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success, event updated"
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "No permission"
          },
          "404": {
            "description": "one or more specified inputs not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/event": {
      "delete": {
        "tags": [
          "event"
        ],
        "summary": "delete a predefined event in event_list and returns success or error code",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "healthngoadmin1"
            }
          },
          {
            "name": "event_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success, event cancelled"
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "No permission"
          },
          "404": {
            "description": "one or more specified inputs not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/event/appointment": {
      "delete": {
        "tags": [
          "event"
        ],
        "summary": "delete a predefined appointment of a specific participant (resource or subscriber) in a specific event and returns success or error code",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "healthngoadmin1"
            }
          },
          {
            "name": "event_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "participant_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "participant_type",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "resource or subscriber"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success, event enrolment cancelled"
          },
          "400": {
            "description": "Invalid event_id supplied"
          },
          "403": {
            "description": "requestor doesnot have permission to cancel enrolement"
          },
          "404": {
            "description": "event_id or participant id not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/event/list_details": {
      "get": {
        "tags": [
          "event"
        ],
        "summary": "get list of events filetered by criteria in event_filter and return info specified by event_details_required with success or error code",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "healthngoadmin1"
            }
          },
          {
            "name": "event_filter",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/event_filter"
            }
          },
          {
            "name": "Details",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/event_details_required"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success,event_list",
            "content": {
              "json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/event_list"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "No permission"
          },
          "404": {
            "description": "one or more specified inputs not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/entity/new": {
      "post": {
        "tags": [
          "entity"
        ],
        "summary": "create a new entity, in entity_list with given entity_details, returns new entity id or entity error code",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "healthngoadmin1"
            }
          },
          {
            "name": "details",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/entity_details"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "ID of created entity",
                  "example": "entity_name:xyz hospital,entity_id:4524458935"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "No permission"
          },
          "404": {
            "description": "one or more specified inputs not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/entity/modifications": {
      "put": {
        "tags": [
          "entity"
        ],
        "summary": "changes values of specific details (as given by entity_details) of given entity (selected by entity_filter)in entity_list and returns success or error code",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "healthngoadmin1"
            }
          },
          {
            "name": "entity_filter",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/entity_filter"
            }
          },
          {
            "name": "details",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/entity_details"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success, entity updated"
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "No permission"
          },
          "404": {
            "description": "one or more specified inputs not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/entity": {
      "delete": {
        "tags": [
          "entity"
        ],
        "summary": "delete a predefined entity in entity_list and returns success or error code",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "healthngoadmin1"
            }
          },
          {
            "name": "entity_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success, entity cancelled"
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "No permission"
          },
          "404": {
            "description": "one or more specified inputs not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/entity/list_details": {
      "get": {
        "tags": [
          "entity"
        ],
        "summary": "get list of entities filetered by criteria in entity_filter and return info specified by entity_details_required with success or error code",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "healthngoadmin1"
            }
          },
          {
            "name": "entity_filter",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/entity_filter"
            }
          },
          {
            "name": "Details",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/entity_details_required"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success,entity list",
            "content": {
              "json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/entity_list"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "No permission"
          },
          "404": {
            "description": "one or more specified inputs not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/resource/new": {
      "post": {
        "tags": [
          "resource"
        ],
        "summary": "create a new resource, in resource_list with given resource_details, returns new resource id or failure error code with success or error code",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "healthngoadmin1"
            }
          },
          {
            "name": "details",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/resource_details"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "ID of created resource",
                  "example": "resource_name:abcd,resource_id:4524458935"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "No permission"
          },
          "404": {
            "description": "one or more specified inputs not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/resource/modifications": {
      "put": {
        "tags": [
          "resource"
        ],
        "summary": "changes values of specific details (as given by resource_details) of given resource (selected by resource_filter)in resource_list and returns success or error code",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "healthngoadmin1"
            }
          },
          {
            "name": "resource_filter",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/resource_filter"
            }
          },
          {
            "name": "details",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/resource_details"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success, resource updated"
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "No permission"
          },
          "404": {
            "description": "one or more specified inputs not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/resource": {
      "delete": {
        "tags": [
          "resource"
        ],
        "summary": "delete a predefined resource in resource_list and returns success or error code",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "healthngoadmin1"
            }
          },
          {
            "name": "resource_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success, resource cancelled"
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "No permission"
          },
          "404": {
            "description": "one or more specified inputs not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/resource/list_details": {
      "get": {
        "tags": [
          "resource"
        ],
        "summary": "get list of resources filetered by criteria in resource_filter and return info specified by resource_details_required with success or error code",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "healthngoadmin1"
            }
          },
          {
            "name": "resource_filter",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/resource_filter"
            }
          },
          {
            "name": "Details",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/resource_details_required"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success,resource  list",
            "content": {
              "json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/resource_list"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "No permission"
          },
          "404": {
            "description": "one or more specified inputs not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/resource/availability": {
      "get": {
        "tags": [
          "resource"
        ],
        "summary": "get details of resources matching criteria given by free_resource_filter, that are free(unallocated) in a given date range and entity and returns success or error code",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "healthngoadmin1"
            }
          },
          {
            "name": "free_resource_filter",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/free_resource_filter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success,resource  list",
            "content": {
              "json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/free_resource_list"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "No permission"
          },
          "404": {
            "description": "one or more specified inputs not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/subscriber/new": {
      "post": {
        "tags": [
          "subscriber"
        ],
        "summary": "create a new subscriber, in subscriber_list with given subscriber_details, returns new subscriber id or failure error code",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "healthngoadmin1"
            }
          },
          {
            "name": "details",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/subscriber_details"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "ID of created subscriber",
                  "example": "subscriber_name:abcd,subscriber_id:4524458935"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "No permission"
          },
          "404": {
            "description": "one or more specified inputs not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/subscriber/modifications": {
      "put": {
        "tags": [
          "subscriber"
        ],
        "summary": "changes values of specific details (as given by subscriber_details) of given entity (selected by subscriber_filter)in subscriber_list and returns success or error code",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "healthngoadmin1"
            }
          },
          {
            "name": "subscriber_filter",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/subscriber_filter"
            }
          },
          {
            "name": "details",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/subscriber_details"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success, subscriber updated"
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "No permission"
          },
          "404": {
            "description": "one or more specified inputs not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/subscriber": {
      "delete": {
        "tags": [
          "subscriber"
        ],
        "summary": "delete a predefined subscriber in subscriber_list and returns success or error code",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "healthngoadmin1"
            }
          },
          {
            "name": "subscriber_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success, subscriber cancelled"
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "No permission"
          },
          "404": {
            "description": "one or more specified inputs not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/subscriber/list_details": {
      "get": {
        "tags": [
          "subscriber"
        ],
        "summary": "get list of subscribers filetered by criteria in subscriber_filter and return info specified by subscriber_details_required with success or error code",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "healthngoadmin1"
            }
          },
          {
            "name": "subscriber_filter",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/subscriber_filter"
            }
          },
          {
            "name": "Details",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/subscriber_details_required"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success,subscriber  list",
            "content": {
              "json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/subscriber_list"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "No permission"
          },
          "404": {
            "description": "one or more specified inputs not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/message/new": {
      "post": {
        "tags": [
          "message"
        ],
        "summary": "create a new message, in message_list with given message_details, returns new message id or failure error code",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "healthngoadmin1"
            }
          },
          {
            "name": "details",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/message_list"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "ID of created message",
                  "example": "message_category:appointment_reminder,message_id:4524458935"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "No permission"
          },
          "404": {
            "description": "one or more specified inputs not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/message/modifications": {
      "put": {
        "tags": [
          "message"
        ],
        "summary": "changes values of specific details (as given by message_details) of given message (selected by message_filter)in message_list and returns success or error code",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "healthngoadmin1"
            }
          },
          {
            "name": "message_filter",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/message_filter"
            }
          },
          {
            "name": "details",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/message_details"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success, message updated"
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "No permission"
          },
          "404": {
            "description": "one or more specified inputs not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/message": {
      "delete": {
        "tags": [
          "message"
        ],
        "summary": "delete a predefined message in message_list and eturns success or error code",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "healthngoadmin1"
            }
          },
          {
            "name": "message_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success, message cancelled"
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "No permission"
          },
          "404": {
            "description": "one or more specified inputs not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/message/list_details": {
      "get": {
        "tags": [
          "message"
        ],
        "summary": "get list of messages filetered by criteria in message_filter and return info specified by message_details_required or error code",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "healthngoadmin1"
            }
          },
          {
            "name": "message_filter",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/message_filter"
            }
          },
          {
            "name": "Details",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/message_details_required"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success,entity list",
            "content": {
              "json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/message_list"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "No permission"
          },
          "404": {
            "description": "one or more specified inputs not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/affiliation/new": {
      "post": {
        "tags": [
          "affiliation"
        ],
        "summary": "create a new affiliation, in affiliation_list with given affiliation_details, returns new affiliation id or failure error code",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "healthngoadmin1"
            }
          },
          {
            "name": "details",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/affiliation_details"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "ID of created affiliation",
                  "example": "affiliation_id:4524458935"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "No permission"
          },
          "404": {
            "description": "one or more specified inputs not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/affiliation/modifications": {
      "put": {
        "tags": [
          "affiliation"
        ],
        "summary": "changes values of specific details (as given by affiliation_details) of given affiliation (selected by affiliation_filter)in affiliation_list and returns success or error code",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "healthngoadmin1"
            }
          },
          {
            "name": "affiliation_filter",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/affiliation_filter"
            }
          },
          {
            "name": "details",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/affiliation_details"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success, affiliation updated"
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "No permission"
          },
          "404": {
            "description": "one or more specified inputs not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/affiliation": {
      "delete": {
        "tags": [
          "affiliation"
        ],
        "summary": "delete a predefined affiliation in affiliation_list and returns success or error code",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "healthngoadmin1"
            }
          },
          {
            "name": "affiliation_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success, affiliation cancelled"
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "No permission"
          },
          "404": {
            "description": "one or more specified inputs not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/affiliation/list_details": {
      "get": {
        "tags": [
          "affiliation"
        ],
        "summary": "get list of affiliation filetered by criteria in affiliation_filter and return info specified by affiliation_details_required with success or error code",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "healthngoadmin1"
            }
          },
          {
            "name": "affiliation_filter",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/affiliation_filter"
            }
          },
          {
            "name": "Details",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/affiliation_details_required"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success,entity list",
            "content": {
              "json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/affiliation_list"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "No permission"
          },
          "404": {
            "description": "one or more specified inputs not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/alert_schedule/new": {
      "post": {
        "tags": [
          "alert_schedule"
        ],
        "summary": "create a new alert_schedule, in alert_schedule_list with given alert_schedule_details, returns new alert_schedule id or failure error code",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "healthngoadmin1"
            }
          },
          {
            "name": "details",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/alert_schedule_details"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "ID of created alert_schedule",
                  "example": "alert_schedule_id:4524458935"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "No permission"
          },
          "404": {
            "description": "one or more specified inputs not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/alert_schedule/modifications": {
      "put": {
        "tags": [
          "alert_schedule"
        ],
        "summary": "changes values of specific details (as given by alert_schedule_details) of given alert_schedule (selected by alert_schedule_filter)in alert_schedule_list and returns success or error code",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "healthngoadmin1"
            }
          },
          {
            "name": "alert_schedule_filter",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/alert_schedule_filter"
            }
          },
          {
            "name": "details",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/alert_schedule_details"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success, alert_schedule updated"
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "No permission"
          },
          "404": {
            "description": "one or more specified inputs not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/alert_schedule": {
      "delete": {
        "tags": [
          "alert_schedule"
        ],
        "summary": "delete a predefined affiliation in affiliation_list and returns success or error code",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "healthngoadmin1"
            }
          },
          {
            "name": "alert_schedule_id",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event_id",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success, alert_schedule cancelled"
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "No permission"
          },
          "404": {
            "description": "one or more specified inputs not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/alert_schedule/list_details": {
      "get": {
        "tags": [
          "alert_schedule"
        ],
        "summary": "get list of alert_schedule filetered by criteria in alert_schedule_filter and return info specified by alert_schedule_details_required or error code",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "healthngoadmin1"
            }
          },
          {
            "name": "alert_schedule_filter",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/alert_schedule_filter"
            }
          },
          {
            "name": "Details",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/alert_schedule_details_required"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success,entity list",
            "content": {
              "json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/alert_schedule_list"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "No permission"
          },
          "404": {
            "description": "one or more specified inputs not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/log/new": {
      "put": {
        "tags": [
          "log"
        ],
        "summary": "update attendence of specific participants of event(s) and returns success or error code",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "healthngoadmin1"
            }
          },
          {
            "name": "details",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/log_details"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success, status",
            "content": {
              "json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "No permission"
          },
          "404": {
            "description": "one or more specified inputs not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/log/list_details": {
      "get": {
        "tags": [
          "log"
        ],
        "summary": "Publish chronological transaction report as chosen by filter with success or error code",
        "parameters": [
          {
            "name": "requestor_id",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "healthngoadmin1"
            }
          },
          {
            "name": "log_filter",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/log_filter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Publish specific types of reports from logs",
            "content": {
              "json": {
                "schema": {
                  "$ref": "#/components/schemas/log_details"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "No permission"
          },
          "404": {
            "description": "one or more specified inputs not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "entity_list": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/entity_list_inner"
        }
      },
      "entity_details": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "example": "hospital"
          },
          "name": {
            "type": "string",
            "example": "abc"
          },
          "phone": {
            "type": "string",
            "example": "+911234567890"
          },
          "email": {
            "type": "string",
            "example": "info@xyz.com"
          },
          "website": {
            "type": "string",
            "format": "url",
            "example": "www.abc.com"
          }
        }
      },
      "entity_filter": {
        "type": "object",
        "properties": {
          "entity_id": {
            "type": "string",
            "example": "67890"
          },
          "category": {
            "type": "string",
            "example": "hospital"
          },
          "name": {
            "type": "string",
            "example": "abc"
          },
          "phone": {
            "type": "string",
            "example": "+911234567890"
          },
          "email": {
            "type": "string",
            "example": "info@xyz.com"
          },
          "website": {
            "type": "string",
            "format": "url",
            "example": "www.abc.com"
          }
        }
      },
      "entity_details_required": {
        "type": "object",
        "properties": {
          "entity_id": {
            "type": "boolean",
            "example": false
          },
          "category": {
            "type": "boolean",
            "example": true
          },
          "name": {
            "type": "boolean",
            "example": true
          },
          "phone": {
            "type": "boolean",
            "example": true
          },
          "email": {
            "type": "boolean",
            "example": true
          },
          "website": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "resource_list": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/resource_list_inner"
        }
      },
      "resource_details": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "psrk"
          },
          "category": {
            "type": "string",
            "example": "doctor"
          },
          "phone": {
            "type": "string",
            "example": "+911234567890"
          },
          "email": {
            "type": "string",
            "example": "doctor1@xyz.com"
          },
          "alert_url": {
            "type": "string",
            "format": "url",
            "example": "psrk@gmail.com"
          },
          "alert_preference": {
            "type": "string",
            "example": "phone"
          },
          "status_poll_url": {
            "type": "string",
            "format": "url",
            "example": "www.doctor1.com"
          }
        }
      },
      "resource_filter": {
        "type": "object",
        "properties": {
          "resource_id": {
            "type": "string",
            "example": "54321"
          },
          "name": {
            "type": "string",
            "example": "psrk"
          },
          "category": {
            "type": "string",
            "example": "doctor"
          },
          "phone": {
            "type": "string",
            "example": "+911234567890"
          },
          "email": {
            "type": "string",
            "example": "abc@gmail.com"
          },
          "alert_url": {
            "type": "string",
            "format": "url",
            "example": "www.doctor1.com"
          },
          "alert_preference": {
            "type": "string",
            "example": " phone"
          },
          "status_poll_url": {
            "type": "string",
            "format": "url",
            "example": "www.doctor1.com"
          }
        }
      },
      "resource_details_required": {
        "type": "object",
        "properties": {
          "resource_id": {
            "type": "boolean",
            "example": false
          },
          "name": {
            "type": "boolean",
            "example": true
          },
          "category": {
            "type": "boolean",
            "example": true
          },
          "phone": {
            "type": "boolean",
            "example": true
          },
          "email": {
            "type": "boolean",
            "example": true
          },
          "alert_url": {
            "type": "boolean",
            "example": true
          },
          "alert_preference": {
            "type": "boolean",
            "example": true
          },
          "status_poll_url": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "subscriber_list": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/subscriber_list_inner"
        }
      },
      "subscriber_details": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "abc"
          },
          "category": {
            "type": "string",
            "example": "patient"
          },
          "phone": {
            "type": "string",
            "example": "+911234567890"
          },
          "email": {
            "type": "string",
            "example": "abc@gmail.com"
          },
          "alert_url": {
            "type": "string",
            "format": "url",
            "example": "www.abc.com"
          },
          "alert_preference": {
            "type": "string",
            "example": "phone"
          },
          "status_poll_url": {
            "type": "string",
            "format": "url",
            "example": "www.abc.com"
          }
        }
      },
      "subscriber_filter": {
        "type": "object",
        "properties": {
          "subscriber_id": {
            "type": "string",
            "example": "12345"
          },
          "category": {
            "type": "string",
            "example": "patient"
          },
          "name": {
            "type": "string",
            "example": "abc"
          },
          "phone": {
            "type": "string",
            "example": "+911234567890"
          },
          "email": {
            "type": "string",
            "example": "abc@gmail.com"
          },
          "alert_url": {
            "type": "string",
            "format": "url",
            "example": "www.abc.com"
          },
          "alert_preference": {
            "type": "string",
            "example": " phone"
          },
          "status_poll_url": {
            "type": "string",
            "format": "url",
            "example": "www.abc.com"
          }
        }
      },
      "subscriber_details_required": {
        "type": "object",
        "properties": {
          "subscriber_id": {
            "type": "boolean"
          },
          "category": {
            "type": "string",
            "example": "false"
          },
          "name": {
            "type": "boolean",
            "example": true
          },
          "phone": {
            "type": "boolean",
            "example": true
          },
          "email": {
            "type": "boolean",
            "example": true
          },
          "alert_url": {
            "type": "boolean",
            "example": true
          },
          "alert_preference": {
            "type": "boolean",
            "example": true
          },
          "status_poll_url": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "event_list": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/event_list_inner"
        }
      },
      "event_details": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "doctor_consultation"
          },
          "category": {
            "type": "string",
            "example": "opd_physician_consultation"
          },
          "host_entity_id": {
            "type": "string",
            "example": "67890"
          },
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          },
          "deadline": {
            "type": "string",
            "format": "date-time"
          },
          "subscriber_limit": {
            "type": "string",
            "example": "1"
          },
          "terms": {
            "type": "string",
            "example": "non refundable"
          },
          "status": {
            "type": "string",
            "example": "open"
          },
          "subscriber_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "[1]"
            }
          },
          "resource_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "[1]"
            }
          },
          "venue": {
            "$ref": "#/components/schemas/venue"
          }
        }
      },
      "event_filter": {
        "type": "object",
        "properties": {
          "event_id": {
            "type": "string",
            "example": "12345"
          },
          "name": {
            "type": "string",
            "example": "doctor_consultation"
          },
          "category": {
            "type": "string",
            "example": "opd_physician_consultation"
          },
          "host_entity_id": {
            "type": "string",
            "example": "67890"
          },
          "subscriber_limit": {
            "type": "string",
            "example": "1"
          },
          "terms": {
            "type": "boolean",
            "example": false
          },
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          },
          "participant_type": {
            "type": "string",
            "example": "resource"
          },
          "participant_id": {
            "type": "string",
            "example": "1"
          },
          "venue": {
            "$ref": "#/components/schemas/venue"
          }
        }
      },
      "event_details_required": {
        "type": "object",
        "properties": {
          "event_id": {
            "type": "boolean",
            "example": false
          },
          "name": {
            "type": "boolean",
            "example": true
          },
          "category": {
            "type": "boolean",
            "example": true
          },
          "host_entity_id": {
            "type": "boolean",
            "example": true
          },
          "period": {
            "type": "boolean",
            "example": true
          },
          "venue": {
            "type": "boolean",
            "example": true
          },
          "deadline": {
            "type": "boolean",
            "example": true
          },
          "subscriber_limit": {
            "type": "boolean",
            "example": true
          },
          "terms": {
            "type": "boolean",
            "example": true
          },
          "status": {
            "type": "boolean",
            "example": true
          },
          "subscriber_ids": {
            "type": "boolean",
            "example": true
          },
          "resource_ids": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "affiliation_list": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/affiliation_list_inner"
        }
      },
      "affiliation_details": {
        "type": "object",
        "properties": {
          "resource_id": {
            "type": "string",
            "example": "12345"
          },
          "entity_id": {
            "type": "string",
            "example": "67890"
          },
          "category": {
            "type": "string",
            "example": "physician"
          },
          "day_of_week": {
            "type": "string",
            "example": "monday"
          },
          "start_time": {
            "type": "string",
            "format": "time",
            "example": "09:00:00"
          },
          "end_time": {
            "type": "string",
            "format": "time",
            "example": "17:00:00"
          }
        }
      },
      "affiliation_filter": {
        "type": "object",
        "properties": {
          "affiliation_id": {
            "type": "string",
            "example": "1"
          },
          "resource_id": {
            "type": "string",
            "example": "12345"
          },
          "entity_id": {
            "type": "string",
            "example": "67890"
          },
          "category": {
            "type": "string",
            "example": "physician"
          },
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "affiliation_details_required": {
        "type": "object",
        "properties": {
          "affiliation_id": {
            "type": "boolean",
            "example": false
          },
          "resource_id": {
            "type": "boolean",
            "example": true
          },
          "entity_id": {
            "type": "boolean",
            "example": true
          },
          "category": {
            "type": "boolean",
            "example": true
          },
          "work_days_hours": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "alert_schedule_list": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/alert_schedule_list_inner"
        }
      },
      "alert_schedule_details": {
        "type": "object",
        "properties": {
          "event_id": {
            "type": "string",
            "example": "12345"
          },
          "target_category": {
            "type": "string",
            "example": "subscriber"
          },
          "message_id": {
            "type": "string",
            "example": "1"
          },
          "alert_datetime": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "alert_schedule_filter": {
        "type": "object",
        "properties": {
          "alert_schedule_id": {
            "type": "string",
            "example": "1"
          },
          "entity_id": {
            "type": "string",
            "example": "12345"
          },
          "target_category": {
            "type": "string",
            "example": "subscriber"
          },
          "message_id": {
            "type": "string",
            "example": "1"
          },
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "alert_schedule_details_required": {
        "type": "object",
        "properties": {
          "alert_schedule_id": {
            "type": "boolean",
            "example": false
          },
          "entity_id": {
            "type": "boolean",
            "example": true
          },
          "message_id": {
            "type": "boolean",
            "example": true
          },
          "alert_datetime": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "message_list": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/message_list_inner"
        }
      },
      "message_details": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "example": "reminder"
          },
          "message_body": {
            "type": "string",
            "example": "you have appointment for doctor consultation today"
          }
        }
      },
      "message_filter": {
        "type": "object",
        "properties": {
          "message_id": {
            "type": "string",
            "example": "1"
          },
          "category": {
            "type": "string",
            "example": "reminder"
          },
          "message_body": {
            "type": "string",
            "example": "you have appointment for doctor consultation today"
          }
        }
      },
      "message_details_required": {
        "type": "object",
        "properties": {
          "message_id": {
            "type": "boolean",
            "example": false
          },
          "category": {
            "type": "boolean",
            "example": true
          },
          "message_body": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "log_list": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/log_list_inner"
        }
      },
      "log_details": {
        "type": "object",
        "properties": {
          "logger_category": {
            "type": "string",
            "example": "resource"
          },
          "logger_id": {
            "type": "string",
            "example": "1"
          },
          "entity_id": {
            "type": "string",
            "example": "67890"
          },
          "log_category": {
            "type": "string",
            "example": "attendance"
          },
          "datetime": {
            "type": "string",
            "format": "date-time"
          },
          "log_data": {
            "type": "string",
            "example": "event_id:12345,subscriber_id:1,token:a2s3x2fer,status:attended"
          }
        }
      },
      "log_filter": {
        "type": "object",
        "properties": {
          "entity_id": {
            "type": "string",
            "example": "67890"
          },
          "category": {
            "type": "string",
            "example": "attendance"
          },
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "free_resource_list": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/free_resource_details"
        }
      },
      "free_resource_details": {
        "type": "object",
        "properties": {
          "resource_id": {
            "type": "string",
            "example": "1"
          },
          "resource_name": {
            "type": "string",
            "example": "abc"
          },
          "free_slots": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "{[2018-02-15T11:00:00to2018-02-15T11:09:00:00],[2018-02-22T11:00:00to2018-02-22T11:17:00:00]}"
            }
          }
        }
      },
      "free_resource_filter": {
        "type": "object",
        "properties": {
          "resource_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "[\"1,2,3\"]"
            }
          },
          "category": {
            "type": "string",
            "example": "doctor"
          },
          "Entity_id": {
            "type": "string"
          },
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "venue": {
        "type": "object",
        "properties": {
          "building": {
            "type": "string",
            "example": "xyz"
          },
          "street": {
            "type": "string",
            "example": "7th main"
          },
          "area": {
            "type": "string",
            "example": "wilson garden"
          },
          "city": {
            "type": "string",
            "example": "bangalore"
          },
          "state": {
            "type": "string",
            "example": "karnataka"
          },
          "country": {
            "type": "string",
            "example": "india"
          },
          "location": {
            "$ref": "#/components/schemas/latlong"
          }
        }
      },
      "latlong": {
        "type": "object",
        "properties": {
          "lat": {
            "type": "string",
            "example": "0.1"
          },
          "long": {
            "type": "string",
            "example": "0.2"
          }
        },
        "example": "mnop,7th main,wilson garden,bangalore,karnataka,India,560048"
      },
      "entity_list_inner": {
        "type": "object",
        "properties": {
          "entity_id": {
            "type": "string",
            "example": "67890"
          },
          "details": {
            "$ref": "#/components/schemas/entity_details"
          }
        }
      },
      "resource_list_inner": {
        "type": "object",
        "properties": {
          "resource_id": {
            "type": "string",
            "example": "54321"
          },
          "details": {
            "$ref": "#/components/schemas/resource_details"
          }
        }
      },
      "subscriber_list_inner": {
        "type": "object",
        "properties": {
          "subscriber_id": {
            "type": "string",
            "example": "12345"
          },
          "details": {
            "$ref": "#/components/schemas/subscriber_details"
          }
        }
      },
      "event_list_inner": {
        "type": "object",
        "properties": {
          "event_id": {
            "type": "string",
            "example": "12345"
          },
          "details": {
            "$ref": "#/components/schemas/event_details"
          }
        }
      },
      "affiliation_list_inner": {
        "type": "object",
        "properties": {
          "affiliation_id": {
            "type": "string",
            "example": "1"
          },
          "details": {
            "$ref": "#/components/schemas/affiliation_details"
          }
        }
      },
      "alert_schedule_list_inner": {
        "type": "object",
        "properties": {
          "alert_schedule_id": {
            "type": "string",
            "example": "1"
          },
          "details": {
            "$ref": "#/components/schemas/alert_schedule_details"
          }
        }
      },
      "message_list_inner": {
        "type": "object",
        "properties": {
          "message_id": {
            "type": "string",
            "example": "1"
          },
          "details": {
            "$ref": "#/components/schemas/message_details"
          }
        }
      },
      "log_list_inner": {
        "type": "object",
        "properties": {
          "log_id": {
            "type": "string",
            "example": "1"
          },
          "details": {
            "$ref": "#/components/schemas/log_details"
          }
        }
      }
    }
  }
}