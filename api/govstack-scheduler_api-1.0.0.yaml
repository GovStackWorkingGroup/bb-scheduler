openapi: 3.0.1
info:
  title: Govstack Scheduler API
  description: Interfaces to services rendered by Scheduler building block
  termsOfService: TBD
  contact:
    email: psramkumar2@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about scheduler
  url: https://www.govstack.global/
tags:
  - name: Event
    description: Event  API
  - name: find
    description: find  API
  - name: alert
    description: alert  API
  - name: resources
    description: resources  API
  - name: subscribers
    description: subscribers  API
  - name: status
    description: status  API
  - name: get_log_report
    description: log report
paths:
  /Event/Create/:
    post:
      tags:
        - Event
      summary: create a new Event, in Event List with given details, returns new event id  
      operationId: CreateEvent
      parameters:
        - name: requestor_Id
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: Event_Name
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name:   startDateTime
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
            format: datetime
        - name: endDateTime
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
            format: datetime
        - name: Tolerance
          in: query
          style: form
          explode: true
          schema:
            type: string
            format: dd/hh/min
        - name: Location
          in: query
          style: form
          explode: true
          schema:
            type: string
        - name: Alert_Ids[]
          in: query
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: Resource_Ids[]
          in: query
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: Subscriber_Ids[]
          in: query
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: HostEntity_Id
          in: query
          style: form
          explode: true
          schema:
              type: integer
        - name: Subscriber_limit
          in: query
          style: form
          explode: true
          schema:
            type: integer
        - name: Terms
          in: query
          style: form
          explode: true
          schema:
            type: string
        - name: Status
          in: query
          style: form
          explode: true
          schema:
            type: integer
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: string
                description: ID of created Event
                example: 'Event_Name:doctorconsultation,Event_Id:4524458935'
        '403':
          description: requestor doesnot have permission to create a new Event
        '405':
          description: Invalid input
        default:
          description: Unexpected error
  /Event/Modify/:
    put:
      tags:
        - Event
      summary: changes specified fields of given event id in event list to specified values 
      operationId: updateEvent
      parameters:
        - name: requestor_Entity
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: requestor_Role
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: Event_id
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
      requestBody:
        content:
          json:
            schema:
              $ref: '#/components/schemas/Event_Details'
      responses:
        '200':
          description: success, Event updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event_Details'
        '400':
          description: Invalid Event_id supplied
        '403':
          description: requestor doesnot have permission to update
        '404':
          description: Event_id not found
        default:
          description: Unexpected error
  /Event/cancel_Event/:
    delete:
      tags:
        - Event
      summary: cancel a Event
      operationId: cancelEvent
      parameters:
        - name: requestor_Entity
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: requestor_Role
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: Event_id
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
      responses:
        '200':
          description: success, Event cancelled
        '400':
          description: Invalid Event_id supplied
        '403':
          description: requestor doesnot have permission to cancel
        '404':
          description: Event_id not found
        default:
          description: Unexpected error
  /Event/get_Event_details/:
    get:
      tags:
        - Event
      summary: get Event details
      operationId: EventDetail
      parameters:
        - name: requestor_Entity
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: requestor_Role
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: Event_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: Event_Details
          in: query
          required: false
          style: form
          explode: true
          schema:
            $ref: '#/components/schemas/Event_Details'
      responses:
        '200':
          description: success,Event details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event_Details'
        '400':
          description: Invalid EventId
        '403':
          description: requestor doesnot have permission to access the information
        '404':
          description: EventId not found
  /Event/get_Event_list/:
    get:
      tags:
        - Event
      summary: get list of Events
      parameters:
        - name: requestor_Entity
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: requestor_Role
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: Event_Filter
          in: query
          required: true
          style: form
          explode: true
          schema:
            $ref: '#/components/schemas/Event_Filter'
      responses:
        '200':
          description: success,Event list
          content:
            json:
              schema:
                $ref: '#/components/schemas/Event_info'
        '400':
          description: Invalid request
        '403':
          description: requestor doesnot have permission to access the information
        '404':
          description: filter not found
  /Event/update_Event_Status/:
    put:
      tags:
        - Event
      summary: update status of specified Event(s)
      operationId: getStatus
      parameters:
        - name: requestor_Entity
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: requestor_Role
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: source_BB_Id
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: Eventtoken
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: status
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
      responses:
        '200':
          description: success
        '400':
          description: Invalid request
        '403':
          description: requestor doesnot have permission to update
        '404':
          description: sourceId/tokenId/status not found
        default:
          description: Unexpected error
  /Event/request_Event_Status/:
    get:
      tags:
        - Event
      summary: send status requests to target BB
      operationId: requestEventstatus
      parameters:
        - name: requestor_Entity
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: requestor_Role
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: target_BB_Id
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: Eventtoken
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        '400':
          description: Invalid request
        '403':
          description: requestor doesnot have permission to get
        '404':
          description: sourceId/tokenId/status not found
        default:
          description: Unexpected error
  /find_free_resource_slots/:
    get:
      tags:
        - find
      summary: get free slots of the given resource Ids
      operationId: getfreeresourceslots
      parameters:
        - name: requestor_Entity
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: requestor_Role
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: resourceIds
          in: query
          description: atleast one resource Id
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: resource1,resource2,resource3
        - name: coinciding
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            example: false
        - name: date-range
          in: query
          required: false
          style: form
          explode: true
          schema:
            $ref: '#/components/schemas/date-range'
      responses:
        '200':
          description: A list of free slots
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/slots'
        '400':
          description: Invalid resourceId/Ids supplied
        '403':
          description: requestor doesnot have permission to access the information
        '404':
          description: resourceId not found
        default:
          description: Unexpected error
  /find_free_resources/:
    get:
      tags:
        - find
      summary: get free slots of the given resource Ids
      operationId: getfreeslots
      parameters:
        - name: requestor_Entity
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: requestor_Role
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: entityId
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: coinciding
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            example: false
        - name: category
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            example: false
        - name: date-range
          in: query
          required: false
          style: form
          explode: true
          schema:
            $ref: '#/components/schemas/date-range'
      responses:
        '200':
          description: A list of free slots
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/slots'
        '400':
          description: Invalid entityId supplied
        '403':
          description: requestor doesnot have permission to access the information
        '404':
          description: entityId not found
        default:
          description: Unexpected error
  /alert/create_alert/:
    post:
      tags:
        - alert
      summary: create a new alert
      description: create a new alert to the Event
      operationId: createAlert
      parameters:
        - name: requestor_Entity
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: requestor_Role
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
      requestBody:
        content:
          json:
            schema:
              $ref: '#/components/schemas/Alert_Details'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: string
                description: ID of created alert
                example: '6724453535'
        '403':
          description: requestor doesnot have permission to create a new alert
        '405':
          description: Invalid input
        default:
          description: Unexpected error
  /alert/update_alert/:
    put:
      tags:
        - alert
      summary: update an existing alert
      operationId: editALert
      parameters:
        - name: requestor_Entity
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: requestor_Role
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: alertId
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: integer
        - name: Alert_Details
          in: query
          required: false
          style: form
          explode: true
          schema:
            $ref: '#/components/schemas/Alert_Details'
      responses:
        '200':
          description: sucessfully updated
        '400':
          description: Invalid alertId supplied
        '403':
          description: requestor doesnot have permission to update
        '404':
          description: alertId not found
        default:
          description: Unexpected error
  /alert/get_alert_details/:
    get:
      tags:
        - alert
      summary: get details of an alert
      operationId: alertDetails
      parameters:
        - name: requestor_Entity
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: requestor_Role
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: alertId
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: alertdetails
          in: query
          required: false
          style: form
          explode: true
          schema:
            $ref: '#/components/schemas/Alert_Details'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert_Details'
        '400':
          description: Invalid alertId supplied
        '403':
          description: requestor doesnot have permission to access the information
        '404':
          description: alertId not found
        default:
          description: Unexpected error
  /alert/get_alert_list/:
    get:
      tags:
        - alert
      summary: list of alerts
      operationId: alertList
      parameters:
        - name: requestor_Entity
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: requestor_Role
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: entityId
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: alertfilter
          in: query
          required: false
          style: form
          explode: true
          schema:
            $ref: '#/components/schemas/alertfilter'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/alert_info'
        '400':
          description: Invalid alertId supplied
        '403':
          description: requestor doesnot have permission to access the information
        '404':
          description: alertId not found
        default:
          description: Unexpected error
  /alert/allocate_alert/:
    post:
      tags:
        - alert
      summary: allocate alerts to a Event
      operationId: EventAlerts
      parameters:
        - name: requestor_Entity
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: requestor_Role
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: EventId
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: alertId
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        '200':
          description: success
        '400':
          description: Invalid alertId/EventId supplied
        '403':
          description: requestor doesnot have permission to allocate
        '404':
          description: alertId/EventId not found
        default:
          description: Unexpected error
  /alert/deallocate_alert/:
    delete:
      tags:
        - alert
      summary: send Event alerts
      operationId: deallocatealert
      parameters:
        - name: requestor_Entity
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: requestor_Role
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: EventId
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: alertId
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        '200':
          description: success
        '400':
          description: Invalid alertId/EventId supplied
        '403':
          description: requestor doesnot have permission to deallocate
        '404':
          description: alertId/EventId not found
        default:
          description: Unexpected error
  /alert/get_Event_alerts/:
    get:
      tags:
        - alert
      summary: get details of an alert
      operationId: getEventalerts
      parameters:
        - name: requestor_Entity
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: requestor_Role
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: EventId
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: alertdetails
          in: query
          required: false
          style: form
          explode: true
          schema:
            $ref: '#/components/schemas/Alert_Details'
      responses:
        '200':
          description: success
          content:
            json:
              schema:
                $ref: '#/components/schemas/alert_info'
        '400':
          description: Invalid EventId supplied
        '403':
          description: requestor doesnot have permission to access the information
        '404':
          description: EventId not found
        default:
          description: Unexpected error
  /alert/send_Event_alert/:
    post:
      tags:
        - alert
      summary: send Event alerts
      operationId: sendEventalerts
      parameters:
        - name: requestor_Entity
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: requestor_Role
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: EventId
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: alertId
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        '400':
          description: Invalid alertId/EventId supplied
        '403':
          description: requestor doesnot have permission to send alerts
        '404':
          description: alertId/EventId not found
        default:
          description: Unexpected error
  /resources/create_resource/:
    post:
      tags:
        - resources
      summary: create new resource.
      description: create a new resource
      operationId: createResource
      parameters:
        - name: requestor_Entity
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: requestor_Role
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
      requestBody:
        content:
          json:
            schema:
              $ref: '#/components/schemas/resourceconfig'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: string
                description: ID of created resource
                example: '4524453535'
        '403':
          description: requestor doesnot have permission to create a new resource
        '405':
          description: Invalid input
        default:
          description: Unexpected error
  /resources/update_resource/:
    put:
      tags:
        - resources
      summary: update a resource.
      description: update perticular resource details
      operationId: updateResource
      parameters:
        - name: requestor_Entity
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: requestor_Role
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: resource_id
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: integer
      requestBody:
        content:
          json:
            schema:
              $ref: '#/components/schemas/resourceconfig'
      responses:
        '200':
          description: success
        '400':
          description: Invalid resource_id supplied
        '403':
          description: requestor doesnot have permission to update
        '404':
          description: resource_id not found
        default:
          description: Unexpected error
  /resources/get_resource_details/:
    get:
      tags:
        - resources
      summary: get details of created resource.
      description: get details particular resource details
      operationId: getDetailsResource
      parameters:
        - name: requestor_Entity
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: requestor_Role
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: resource_id
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: integer
        - name: resource_details
          in: query
          required: false
          style: form
          explode: true
          schema:
            $ref: '#/components/schemas/Resource_Details'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resourceconfig'
        '400':
          description: Invalid resource_id supplied
        '403':
          description: requestor doesnot have permission to access the information
        '404':
          description: resource_id not found
        default:
          description: Unexpected error
  /resource/get_resource_list/:
    get:
      tags:
        - resources
      summary: list of resources
      operationId: resourceList
      parameters:
        - name: requestor_Entity
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: requestor_Role
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: entityId
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: integer
        - name: resource_filter
          in: query
          required: false
          style: form
          explode: true
          schema:
            $ref: '#/components/schemas/resourcefilter'
      responses:
        '200':
          description: success
          content:
            json:
              schema:
                $ref: '#/components/schemas/resource_info'
        '400':
          description: Invalid entityId supplied
        '403':
          description: requestor doesnot have permission to access the information
        '404':
          description: entityId not found
        default:
          description: Unexpected error
  /resources/allocate_resources/:
    post:
      tags:
        - resources
      summary: allocate a resource
      operationId: allocateResource
      parameters:
        - name: requestor_Entity
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: requestor_Role
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: EventId
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: reourceId
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        '200':
          description: success
        '400':
          description: Invalid resourceId/EventId supplied
        '403':
          description: requestor doesnot have permission to allocate
        '404':
          description: resourceId/EventId not found
        default:
          description: Unexpected error
  /resources/deallocate_resources/:
    delete:
      tags:
        - resources
      summary: deallocate a resource
      operationId: deallocateresources
      parameters:
        - name: requestor_Entity
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: requestor_Role
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: EventId
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: resourceId
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        '200':
          description: success
        '400':
          description: Invalid resourceId/EventId supplied
        '403':
          description: requestor doesnot have permission to deallocate
        '404':
          description: resourceId/EventId not found
        default:
          description: Unexpected error
  /resource/get_Event_resources/:
    get:
      tags:
        - resources
      summary: get list of Event resources
      operationId: Eventresourcelist
      parameters:
        - name: requestor_Entity
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: requestor_Role
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: EventId
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: resource_details
          in: query
          required: false
          style: form
          explode: true
          schema:
            $ref: '#/components/schemas/Resource_Details'
      responses:
        '200':
          description: success
          content:
            json:
              schema:
                $ref: '#/components/schemas/resource_info'
        '400':
          description: Invalid EventId supplied
        '403':
          description: requestor doesnot have permission to access the information
        '404':
          description: EventId not found
        default:
          description: Unexpected error
  /subscribers/create_subscriber/:
    post:
      tags:
        - subscribers
      summary: create a new subscriber
      operationId: createsubscriber
      parameters:
        - name: requestor_Entity
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: requestor_Role
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
      requestBody:
        content:
          json:
            schema:
              $ref: '#/components/schemas/subscriberconfig'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: string
                description: ID of created subscriber
                example: '4524453535'
        '403':
          description: requestor doesnot have permission to create a new subscriber
        '405':
          description: Invalid input
        default:
          description: Unexpected error
  /subscribers/update_subscriber/:
    put:
      tags:
        - subscribers
      summary: update a subscriber
      description: update a particular subscriber details
      operationId: updateSubscribers
      parameters:
        - name: requestor_Entity
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: requestor_Role
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: subscriber_id
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: integer
      requestBody:
        content:
          json:
            schema:
              $ref: '#/components/schemas/subscriberconfig'
      responses:
        '200':
          description: success
        '400':
          description: Invalid subscriber_id supplied
        '403':
          description: requestor doesnot have permission to update
        '404':
          description: subscriber_id not found
        default:
          description: Unexpected error
  /subscribers/get_subscriber_details/:
    get:
      tags:
        - subscribers
      summary: get details of a subscriber
      operationId: getSubscriberDetails
      parameters:
        - name: requestor_Entity
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: requestor_Role
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: subscriber_id
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: integer
        - name: subscriber_details
          in: query
          required: false
          style: form
          explode: true
          schema:
            $ref: '#/components/schemas/Subscriber_Details'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/subscriberconfig'
        '400':
          description: Invalid subscriber_id supplied
        '403':
          description: requestor doesnot have permission to access the information
        '404':
          description: subscriber_id not found
        default:
          description: Unexpected error
  /subscribers/get_subscriber_list/:
    get:
      tags:
        - subscribers
      summary: list of subscribers
      operationId: subscriberList
      parameters:
        - name: requestor_Entity
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: requestor_Role
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: entityId
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: integer
        - name: subscriber_filter
          in: query
          required: false
          style: form
          explode: true
          schema:
            $ref: '#/components/schemas/subscriberfilter'
      responses:
        '200':
          description: success
          content:
            subscriberinfo:
              schema:
                $ref: '#/components/schemas/subscriber_info'
        '400':
          description: Invalid entityId supplied
        '403':
          description: requestor doesnot have permission to access the information
        '404':
          description: entityId not found
        default:
          description: Unexpected error
  /subscribers/allocate_subscriber/:
    post:
      tags:
        - subscribers
      summary: allocate Event subscribers
      operationId: allocateSubscriber
      parameters:
        - name: requestor_Entity
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: requestor_Role
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: EventId
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: subscriberId
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        '200':
          description: success
        '400':
          description: Invalid subscriberId/EventId supplied
        '403':
          description: requestor doesnot have permission to allocate
        '404':
          description: subscriberId/EventId not found
        default:
          description: Unexpected error
  /subscribers/deallocate_subscriber/:
    delete:
      tags:
        - subscribers
      summary: deallocate Event subscriber
      operationId: deallocateSubscriber
      parameters:
        - name: requestor_Entity
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: requestor_Role
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: EventId
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: subscriberId
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        '200':
          description: success
        '400':
          description: Invalid subscriberId/EventId supplied
        '403':
          description: requestor doesnot have permission to deallocate
        '404':
          description: subscriberId/EventId not found
        default:
          description: Unexpected error
  /subscribers/get_Event_subscribers/:
    get:
      tags:
        - subscribers
      summary: list of Event subscribers
      operationId: Eventsubscribers
      parameters:
        - name: requestor_Entity
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: requestor_Role
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: EventId
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: subscriber_details
          in: query
          required: false
          style: form
          explode: true
          schema:
            $ref: '#/components/schemas/Subscriber_Details'
      responses:
        '200':
          description: success
          content:
            json:
              schema:
                $ref: '#/components/schemas/subscriber_info'
        '400':
          description: Invalid EventId supplied
        '403':
          description: requestor doesnot have permission to access the information
        '404':
          description: EventId not found
        default:
          description: Unexpected error
  /status/show_Status/:
    get:
      tags:
        - status
      summary: show status of specified Event(s)
      operationId: showstatus
      parameters:
        - name: requestor_Entity
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: requestor_Role
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: category
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: Alert/Event/Episode/Event/resource /subscriber,Id
        - name: Id
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
      responses:
        '200':
          description: success
          content:
            json:
              schema:
                $ref: '#/components/schemas/Status_List'
        '403':
          description: requestor doesnot have permission to get information
        '404':
          description: category or Id not found
        default:
          description: Unexpected error
  /get_log_report/:
    get:
      tags:
        - get_log_report
      summary: Publish chronological transaction report as chosen by filter
      operationId: getLogReporting
      parameters:
        - name: requestor_Entity
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: requestor_Role
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: category
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
          example: Alert/Event/Episode/Event/resource /subscriber
        - name: Id
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: logdetails
          in: query
          required: true
          style: form
          explode: true
          schema:
            $ref: '#/components/schemas/Log'
        - name: logfilter
          in: query
          required: true
          style: form
          explode: true
          schema:
            $ref: '#/components/schemas/log_filter'
      responses:
        '200':
          description: Publish specific types of reports from logs
          content:
            json:
              schema:
                $ref: '#/components/schemas/log_report'
        '400':
          description: Invalid filter type supplied
        '403':
          description: requestor doesnot have permission to access the information
        '404':
          description: report not found
        default:
          description: Unexpected error
  /entity/create_entity/:
    post:
      tags:
        - entity
      summary: create new entity.
      description: create a new entity
      operationId: createEntity
      parameters:
        - name: requestor_Entity
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: requestor_Role
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
      requestBody:
        content:
          json:
            schema:
              $ref: '#/components/schemas/Entity_Details'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: string
                description: ID of created entity
                example: '4524453535'
        '403':
          description: requestor doesnot have permission to create a new entity
        '405':
          description: Invalid input
        default:
          description: Unexpected error
  /entity/update_entity/:
    put:
      tags:
        - entity
      summary: update entity
      description: update particular entity
      operationId: updateentity
      parameters:
        - name: requestor_Entity
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: requestor_Role
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: entity_id
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: integer
      requestBody:
        content:
          json:
            schema:
              $ref: '#/components/schemas/Entity_Details'
      responses:
        '200':
          description: success
        '400':
          description: Invalid entity_id supplied
        '403':
          description: requestor doesnot have permission to update
        '404':
          description: entity_id not found
        default:
          description: Unexpected error
  /entity/get_entity_details/:
    get:
      tags:
        - entity
      summary: get details of an entity
      operationId: getDetailsEntity
      parameters:
        - name: requestor_Entity
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: requestor_Role
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: entity_id
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: integer
        - name: entity_details
          in: query
          required: false
          style: form
          explode: true
          schema:
            $ref: '#/components/schemas/Entity_Details'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entity_Details'
        '400':
          description: Invalid entity_id supplied
        '403':
          description: requestor doesnot have permission to access the information
        '404':
          description: entity_id not found
        default:
          description: Unexpected error
  /entity/get_entity_list/:
    get:
      tags:
        - entity
      summary: list of entity
      operationId: entityList
      parameters:
        - name: requestor_Entity
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: requestor_Role
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: entityId
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: integer
        - name: entity_filter
          in: query
          required: false
          style: form
          explode: true
          schema:
            $ref: '#/components/schemas/Entity_Filter'
      responses:
        '200':
          description: success
          content:
            json:
              schema:
                $ref: '#/components/schemas/Entity_Info'
        '400':
          description: Invalid entityId supplied
        '403':
          description: requestor doesnot have permission to access the information
        '404':
          description: entityId not found
        default:
          description: Unexpected error
  /entity/affiliate_entity/:
    post:
      tags:
        - entity
      summary: affiliate entity to alert/subscriber/Event/resource
      operationId: affiliateEntity
      parameters:
        - name: requestor_Entity
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: requestor_Role
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: entityId
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: targetId
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: targetcategory
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
            example: alert/subscriber/Event/resource
      responses:
        '200':
          description: success
        '400':
          description: Invalid entityId/targetId supplied
        '403':
          description: requestor doesnot have permission to affiliate
        '404':
          description: entityId/targetId not found
        default:
          description: Unexpected error
  /entity/deaffiliate_entity/:
    post:
      tags:
        - entity
      summary: deaffiliate entity to alert/subscriber/Event/resource
      operationId: deaffiliateEntity
      parameters:
        - name: requestor_Entity
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: requestor_Role
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: entityId
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: targetId
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: targetcategory
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
            example: alert/subscriber/Event/resource
      responses:
        '200':
          description: success
        '400':
          description: Invalid entityId/targetIdsupplied
        '403':
          description: requestor doesnot have permission to deaffiliate
        '404':
          description: entityId/targetId not found
        default:
          description: Unexpected error
components:
  schemas:
    subscriberconfig:
      type: object
      properties:
        subscriber_category:
          type: string
        name:
          type: string
        phone_no:
          type: string
        email_id:
          type: string
        alerturl:
          type: string
        alertMode:
          type: string
        entityId:
          type: string
        status:
          type: string
        location:
          type: string
    Subscriber_Details:
      type: object
      properties:
        Subscriber_Id:
          type: integer
        Phone_No:
          type: string
        Email_Id:
          type: string
        Alert_Url:
          type: string
        Category:
          type: string
        Name:
          type: string
        Entity_Id:
          type: integer   
        Alert_Mode:
          type: string
        Status:
          type: string
    subscriberfilter:
      type: object
      properties:
        subscriber_id:
          type: string
        subscriber_category:
          type: string
        name:
          type: string
        phone_no:
          type: string
        email_id:
          type: string
        alertMode:
          type: string
        entityId:
          type: string
        status:
          type: string
        location:
          type: string
    subscriber_info:
      type: array
      items:
        $ref: '#/components/schemas/subscriber_info_inner'
    resourceconfig:
      type: object
      properties:
        resource_category:
          type: string
        name:
          type: string
        phone_no:
          type: string
        email_id:
          type: string
        alert_url:
          type: string
        alertMode:
          type: string
        entityId:
          type: string
        status:
          type: string
        location:
          type: string
    Resource_Details:
      type: object
      properties:
        Resource_Id:
          type: integer
        Phone_No:
          type: string
        Email_Id:
          type: string
        Alert_Url:
          type: string
        Category:
          type: string
        Name:
          type: string
        Entity_Id:
          type: integer   
        Alert_Mode:
          type: string
        Status:
          type: string
    resourcefilter:
      type: object
      properties:
        resource_id:
          type: string
        entityId:
          type: string
        status:
          type: string
        location:
          type: string
        resource_category:
          type: string
        alertMode:
          type: string
    resource_info:
      type: array
      items:
        $ref: '#/components/schemas/subscriber_info_inner'
    Event_Details:
      type: object
      properties:
        Event_Name:
          type: string
        startDateTime:
          type: string
          format: datetime
        endDateTime:
          type: string
          format: datetime
        Tolerance:
          type: string
          format: dd/hh/min
        Location:
          type: string
        Alert_Ids:
          type: array
          items:
            type: integer
        Resource_Ids:
          type: array
          items:
            type: integer
        Subscriber_Ids:
          type: array
          items:
            type: integer
        HostEntity_Id:
          type: string
        Subscriber_limit:
          type: string
          format: integer
        Terms:
          type: string
        Status:
          type: string
    Event_Filter:
      type: object
      properties:
        Event_Id:
          type: integer
        Event_Name:
          type: string
        startDateTime:
          type: string
          format: datetime
        endDateTime:
          type: string
          format: datetime
        Tolerance:
          type: string
          format: dd/hh/min
        Location:
          type: string
        Alert_Ids:
          type: array
          items:
            type: integer
        Resource_Ids:
          type: array
          items:
            type: integer
        Subscriber_Ids:
          type: array
          items:
            type: integer
        HostEntity_Id:
          type: string
        Subscriber_limit:
          type: string
          format: integer
        Terms:
          type: string
        Status:
          type: string
    Event_info:
      type: array
      items:
        $ref: '#/components/schemas/Event_info_inner'
    date-range:
      type: object
      properties:
        startdatetime:
          type: string
          format: date-time
        enddatetime:
          type: string
          format: date-time
    Alert_Details:
      type: object
      properties:
        Alert_Id:
          type: integer
        Alert_Name:
          type: string
        Event_Id:
          type: boolean
        Epoch:
          type: string
          format: date-time
        AlertMessage:
          type: string
        status:
          type: string
    alertfilter:
      type: object
      properties:
        entityId:
          type: string
        epoch:
          type: array
          items:
            type: integer
        resource_ids:
          type: array
          items:
            type: string
        subscriber_ids:
          type: array
          items:
            type: integer
        status:
          type: string
        alertcategory:
          type: string
    alert_info:
      type: array
      items:
        $ref: '#/components/schemas/alert_info_inner'
    slots:
      type: array
      items:
        $ref: '#/components/schemas/slots_inner'
    Entity_Details:
      type: object
      properties:
        Entity_Id:
          type: boolean
        Entity_Name:
          type: boolean
        phone_no:
          type: boolean
        email_id:
          type: boolean
        url:
          type: boolean
        location:
          type: boolean
        status:
          type: boolean
    Entity_Filter:
      type: object
      properties:
        entityId:
          type: string
        entityname:
          type: string
        phone_no:
          type: string
        email_id:
          type: string
        url:
          type: string
        location:
          type: string
        status:
          type: string
    Entity_Info:
      type: array
      items:
        $ref: '#/components/schemas/entity_info_inner'
    Status_List:
      type: array
      items:
        $ref: '#/components/schemas/status_list_inner'
    log_report:
      type: object
      properties:
        logId:
          type: string
        logcategory:
          type: string
          example: alert/subscriber/resource/worklist/BBconfig/event/report
        logcontent:
          type: string
        entityId:
          type: string
        date-time:
          type: string
          format: date-time
    Log:
      type: object
      properties:
        Log_Id:
          type: boolean
        Name:
          type: string
        DateTime:
          type: string
          format: date-time
        Log_Data:
          type: string
        Entity_Id:
          type: integer
        User_Id:
          type: integer
        App_Id:
          type: integer
    log_filter:
      type: object
      properties:
        logId:
          type: string
        period:
          $ref: '#/components/schemas/date-range'
        entityId:
          type: string
        logcategory:
          type: string
          example: alert/subscriber/resource/worklist/BBconfig/event/report
    inline_response_200:
      type: object
      properties:
        Eventstatus:
          type: string
    inline_response_200_1:
      type: object
      properties:
        Eventtoken:
          type: string
    subscriber_info_inner:
      type: object
      properties:
        subscriber_id:
          type: string
        subscriber_name:
          type: string
    Event_info_inner:
      type: object
      properties:
        Event_id:
          type: string
        Event_name:
          type: string
    alert_info_inner:
      type: object
      properties:
        alert_id:
          type: string
        alert_name:
          type: string
    slots_inner:
      type: object
      properties:
        from:
          type: string
          format: date-time
          example: '2018-02-15T00:00:00Z'
        to:
          type: string
          format: date-time
          example: '2018-02-15T00:00:00Z'
    entity_info_inner:
      type: object
      properties:
        entity_id:
          type: string
        entity_name:
          type: string
    status_list_inner:
      type: object
      properties:
        id:
          type: string
        category:
          type: string
        status:
          type: string
